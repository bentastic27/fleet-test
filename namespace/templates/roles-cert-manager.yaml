# This manifest allows teams to deploy cert-manager Certificate Issuers into their namespace
# and have the cert-manager service properly handle the request process. This is required if
# a team needs to connect to, for instance, their own Route53 account to manage DNS entries.
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: {{ template "namespace.fullname" . }}-cert-manager
  namespace: {{ template "namespace.fullname" . }}
  labels:
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
rules:
  - apiGroups: ["certmanager.k8s.io"]
    resources: ["certificates", "issuers"]
    verbs: ["*"]
  - apiGroups: [""]
    # TODO: remove endpoints once 0.4 is released. We include it here in case
    # users use the 'master' version of the Helm chart with a 0.2.x release of
    # cert-manager that still performs leader election with Endpoint resources.
    # We advise users don't do this, but some will anyway and this will reduce
    # friction.
    resources: ["endpoints", "configmaps", "secrets", "events", "services", "pods"]
    verbs: ["*"]
  - apiGroups: ["extensions"]
    resources: ["ingresses"]
    verbs: ["*"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: {{ template "namespace.fullname" . }}-cert-manager
  namespace: {{ template "namespace.fullname" . }}
  labels:
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
subjects:
- kind: Group
  name: keycloak_group://{{ .Values.keycloakBaseGroup }}-admin
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: {{ template "namespace.fullname" . }}-cert-manager
  apiGroup: rbac.authorization.k8s.io
